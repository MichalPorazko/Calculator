[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\jpora\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\jpora\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.6 (Oracle Corporation Java 19)
[debug]       Load.loadUnit: plugins took 134.092ms
[debug]       Load.loadUnit: defsScala took 1.2523ms
[debug] [Loading] Scanning directory C:\Users\jpora\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\jpora\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 13.7425 ms
[debug]           Load.resolveProject(global-plugins) took 38.464ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\jpora\.sbt\1.0\plugins, plugins: List(<none>))) took 67.866ms
[debug] [Loading] Done in C:\Users\jpora\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 88.4515ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1818ms
[debug]     Load.loadUnit(file:/C:/Users/jpora/.sbt/1.0/plugins/, ...) took 241.2891ms
[debug]   Load.apply: load took 430.3185ms
[debug]   Load.apply: resolveProjects took 5.1692ms
[debug]   Load.apply: finalTransforms took 58.1132ms
[debug]   Load.apply: config.delegates took 5.8794ms
[debug]   Load.apply: Def.make(settings)... took 981.652ms
[debug]   Load.apply: structureIndex took 303.5867ms
[debug]   Load.apply: mkStreams took 1.8328ms
[info] loading global plugins from C:\Users\jpora\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3219.2275ms
[debug]           Load.loadUnit: plugins took 18.622ms
[debug]           Load.loadUnit: defsScala took 0.0024ms
[debug] [Loading] Scanning directory C:\Users\jpora\OneDrive\Pulpit\Michal\scala_studia\Calculator\project
[debug]             Load.loadUnit: mkEval took 5.0137ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\jpora\OneDrive\Pulpit\Michal\scala_studia\Calculator\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.8462 ms
[info] loading settings for project calculator-build from idea.sbt ...
[debug]               Load.resolveProject(calculator-build) took 2.2513ms
[debug]             Load.loadTransitive: finalizeProject(Project(id calculator-build, base: C:\Users\jpora\OneDrive\Pulpit\Michal\scala_studia\Calculator\project, plugins: List(<none>))) took 4.5012ms
[debug] [Loading] Done in C:\Users\jpora\OneDrive\Pulpit\Michal\scala_studia\Calculator\project, returning: (calculator-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 2156.3718ms
[debug]           Load.loadUnit: cleanEvalClasses took 4.9297ms
[debug]         Load.loadUnit(file:/C:/Users/jpora/OneDrive/Pulpit/Michal/scala_studia/Calculator/project/, ...) took 2180.7529ms
[debug]       Load.apply: load took 2182.1433ms
[debug]       Load.apply: resolveProjects took 0.1496ms
[debug]       Load.apply: finalTransforms took 15.4427ms
[debug]       Load.apply: config.delegates took 0.4084ms
[debug]       Load.apply: Def.make(settings)... took 61.1052ms
[debug]       Load.apply: structureIndex took 25.0421ms
[debug]       Load.apply: mkStreams took 0.0034ms
[info] loading project definition from C:\Users\jpora\OneDrive\Pulpit\Michal\scala_studia\Calculator\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[warn] Unrecognized repository Scala Plugin Bundled Repository, ignoring it
[debug]     Load.loadUnit: plugins took 3314.8706ms
[debug]     Load.loadUnit: defsScala took 0.0027ms
[debug] [Loading] Scanning directory C:\Users\jpora\OneDrive\Pulpit\Michal\scala_studia\Calculator
[debug]       Load.loadUnit: mkEval took 0.2021ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin)))
[debug] Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 2.1993 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 23.4699ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\jpora\OneDrive\Pulpit\Michal\scala_studia\Calculator, plugins: List(<none>))) took 27.3275ms
[debug] [Loading] Done in C:\Users\jpora\OneDrive\Pulpit\Michal\scala_studia\Calculator, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 887.4831ms
[debug]     Load.loadUnit: cleanEvalClasses took 14.5007ms
[debug]   Load.loadUnit(file:/C:/Users/jpora/OneDrive/Pulpit/Michal/scala_studia/Calculator/, ...) took 4217.7996ms
[debug] Load.apply: load took 4219.5925ms
[debug] Load.apply: resolveProjects took 0.1086ms
[debug] Load.apply: finalTransforms took 20.1977ms
[debug] Load.apply: config.delegates took 0.2199ms
[debug] Load.apply: Def.make(settings)... took 48.5378ms
[debug] Load.apply: structureIndex took 21.556ms
[debug] Load.apply: mkStreams took 0.0023ms
[info] set current project to Calculator (in build file:/C:/Users/jpora/OneDrive/Pulpit/Michal/scala_studia/Calculator/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 57846 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 57846, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to Calculator (in build file:/C:/Users/jpora/OneDrive/Pulpit/Michal/scala_studia/Calculator/)
[debug] > Exec(idea-shell, None, None)
